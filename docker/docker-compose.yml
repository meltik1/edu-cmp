version: '2'

services:
  nginx:
    image: nginx
    container_name: nginx
    restart: unless-stopped
    build:
      context: docker/nginx
    volumes:
      - ./api/:/api/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app1
      - app2
      - app3

  app1:
    image: 'notifier'
    build:
      context: .
    container_name: app1
    ports:
      - "8080:8080"
    depends_on:
      - db
      - mongo
    volumes:
      - ./keystore.p12:/server/src/main/resources/keystore.p12
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=300800
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - MONGO_DB_URI=mongodb://root:root@my-mongodb:27017
      - BOT_TOKEN=1531954543:AAHgZt4bem3JygKOQ69JSD-oM51odOA2POg
  app2:
    image: 'notifier'
    build:
      context: .
    container_name: app2
    ports:
      - "8081:8081"
    depends_on:
      - db
      - mongo
    volumes:
      - ./keystore.p12:/server/src/main/resources/keystore.p12
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=300800
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - MONGO_DB_URI=mongodb://root:root@my-mongodb:27017
      - BOT_TOKEN=1553238646:AAE81yqhXVq_9XjYVEmkEay75U7Ej1ULd-U

  app3:
    image: 'notifier'
    build:
      context: .
    container_name: app3
    ports:
      - "8082:8082"
    depends_on:
      - db
      - mongo
    volumes:
      - ./keystore.p12:/server/src/main/resources/keystore.p12
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=300800
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - MONGO_DB_URI=mongodb://root:root@my-mongodb:27017
      - BOT_TOKEN=5264982015:AAHa3j39-SzlYIo0M5alvF5fzjZqm2dkY40


  db:
    image: 'postgres'
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=300800

  mongo:
    image: mongo
    container_name: my-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: my-database
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./mongo-volume:/data/db
    ports:
      - "27017:27017"